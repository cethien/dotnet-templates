@inject ILocalStorageService localStorage
@inject IJSRuntime JS

<div>
    <label for="toggle"
    class="hover:cursor-pointer flex items-center justify-center w-4 h-4 p-4 @Classes">
    @if (_darkMode)
    {
        <i class="fas fa-sun"></i>
    }else
    {
        <i class="fas fa-moon"></i>
    }
    </label>

    <input id="toggle" type="checkbox" class="hidden" checked="@_darkMode" @onchange="ToggleTheme" />
</div>

@code {

    [Parameter]
    public string Classes { get; set; }

    private bool _darkMode;
    private IJSObjectReference _themeModule = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _themeModule = await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/DarkModeToggle.razor.js");

            var theme = await localStorage.GetItemAsStringAsync("theme");
            _darkMode = theme == "dark" ? true : false;
            await _themeModule.InvokeVoidAsync("setTheme", theme);

            StateHasChanged();
        }
    }

    private async Task ToggleTheme(ChangeEventArgs args)
    {
        _darkMode = (bool)args.Value!;

        var theme = _darkMode ? "dark" : "light";

        await localStorage.SetItemAsStringAsync("theme", theme);
        await _themeModule.InvokeVoidAsync("setTheme", theme);
    }
}